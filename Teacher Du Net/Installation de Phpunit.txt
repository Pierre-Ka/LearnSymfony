Pour installer php on fait :
composer require --dev phpunit/phpunit symfony/test-pack  ou
composer require --dev phpunit/phpunit:* symfony/test-pack
ou
composer require --dev phpunit/phpunit:* puis
symfony/test-pack

Creation de .env.test dans lequel on marque :
# define your env variables for the test env here
KERNEL_CLASS='App\Kernel'
APP_SECRET='$ecretf0rt3st'
SYMFONY_DEPRECATIONS_HELPER=999999
PANTHER_APP_ENV=panther
PANTHER_ERROR_SCREENSHOT_DIR=./var/error-screenshots
DATABASE_URL="mysql://root:root@127.0.0.1:3306/panterest_test"

Normalement la commande php bin/phpunit est fonctionnel.
Soit on fait tout à la main, soit un crée un fichier d'execution automatique de commande nommé
Makefiles, Makefiles va executer toutes les commandes liées à la commande make.
Si la commande make n'existe pas alors : choco install make
On crée Makefiles et on copie-colle :
init-test:
	@php bin/console --env=test doctrine:database:drop -f -q --if-exists
	@php bin/console --env=test doctrine:database:create -q
	@php bin/console --env=test doctrine:schema:create -q
	@#php bin/console --env=test doctine:fixtures:load -n -q

test: init-test
	@php bin/phpunit

On crée dans le dossier tests/ 2 dossier Functional/ et Unit/ et dans Unit on copie l'architecture de notre src/ et
pour chaque fichier on fait les tests.
Puis on lance les tests avec la commande : make test
